<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tools on gattaca-ngin</title>
    <link>https://daichou.github.io/tags/tools/</link>
    <description>Recent content in tools on gattaca-ngin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Wed, 14 Dec 2016 00:49:00 -0800</lastBuildDate>
    
	<atom:link href="https://daichou.github.io/tags/tools/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>方便的網站：stackedit</title>
      <link>https://daichou.github.io/posts/stackedit/</link>
      <pubDate>Wed, 14 Dec 2016 00:49:00 -0800</pubDate>
      
      <guid>https://daichou.github.io/posts/stackedit/</guid>
      <description>**
方便的網站：stackedit *在CMS風行一段時間之際，傳統的部落格文書編輯器已經顯得過時無用，調字體大小等這些基本功能用傳統文書編輯器還可以接受，但表格等則還需要動用html，這顯得十分麻煩，這時運用markdown方式撰寫文件的功能的網站如與後出筍般出現，包括hackmd:https://hackmd.io/專案的成功。而部落格方面，除了wordpress的markdown插件，logdown以markdown為訴求的網站平台外，如果使用傳統google所提供的blogger功能的話，首推stackedit:https://stackedit.io，他的功能十分強大，可以幫你管理你的文章還可以串連多個blog平台，包括blogger,wordpress,github,gist,tumblr等，而且畫面簡潔明亮，害我都跳槽了哈哈。
 Written with StackEdit.
 </description>
    </item>
    
    <item>
      <title>[tools]GNU 開發工具：nm</title>
      <link>https://daichou.github.io/posts/toolsgnu-nm/</link>
      <pubDate>Tue, 16 Aug 2016 07:46:00 -0700</pubDate>
      
      <guid>https://daichou.github.io/posts/toolsgnu-nm/</guid>
      <description>[tools]GNU 開發工具：nm nm nm這東西是來列出object files(binary file)的符號(symbol)，包括列出地址(address)、類型、名稱。
以下我打了一個範例。
#include&amp;lt;stdio.h&amp;gt; void foo(){ printf(&amp;#34;bar&amp;#34;); } int Global_var; int Global_var_init = 0; int main() { int local_var; int local_var_init = 0; int a = local_var_init + Global_var_init; foo(); } 接下來是對其編譯出來的a.out下nm指令的結果。
0000000000601030 B __bss_start 0000000000601030 b completed.6916 0000000000601020 D __data_start 0000000000601020 W data_start 0000000000400430 t deregister_tm_clones 00000000004004b0 t __do_global_dtors_aux 0000000000600e10 t __do_global_dtors_aux_fini_array_entry 0000000000601028 D __dso_handle 0000000000600e20 d _DYNAMIC 0000000000601030 D _edata 0000000000601040 B _end 00000000004005b4 T _fini 00000000004004f6 T foo 00000000004004d0 t frame_dummy 0000000000600e08 t __frame_dummy_init_array_entry 0000000000400718 r __FRAME_END__ 0000000000601000 d _GLOBAL_OFFSET_TABLE_ 0000000000601038 B Global_var 0000000000601034 B Global_var_init w __gmon_start__ 00000000004005c8 r __GNU_EH_FRAME_HDR 00000000004003c8 T _init 0000000000600e10 t __init_array_end 0000000000600e08 t __init_array_start 00000000004005c0 R _IO_stdin_used 0000000000600e18 d __JCR_END__ 0000000000600e18 d __JCR_LIST__ 00000000004005b0 T __libc_csu_fini 0000000000400540 T __libc_csu_init U __libc_start_main@@GLIBC_2.</description>
    </item>
    
  </channel>
</rss>