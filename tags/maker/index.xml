<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Maker on Daichou&#39;s blog</title>
    <link>https://daichou.github.io/tags/maker/</link>
    <description>Recent content in Maker on Daichou&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Sun, 22 Jul 2018 01:34:00 -0700</lastBuildDate>
    
	<atom:link href="https://daichou.github.io/tags/maker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Arduino: High resolution PWM (more than 8bits),Arduino提高PWM resolution</title>
      <link>https://daichou.github.io/posts/arduino-high-resolution-pwm-more-than/</link>
      <pubDate>Sun, 22 Jul 2018 01:34:00 -0700</pubDate>
      
      <guid>https://daichou.github.io/posts/arduino-high-resolution-pwm-more-than/</guid>
      <description>Arduino PWM(analogWrite) Arduino PWM是使用analogWrite，但是其有一個限制，也就是PWM resolution只有256，PWM duty cycle的值只能介於0~255，對於一般的應用來說，這個值還可以應付，但是對於高精度的Servo或是馬達，這個值實在是太小了。(請參考analogWrite)。雖然在有些板子Arduino提供analogWriteResolution這個函式(Zero, Due &amp;amp; MKR Family、參閱：analogWriteResolution)可以將PWM resolution提高至12，更高的值內部會做mapping到比較低解析度。至於其他板子(例如:Arduino Mega 2560)，則需要第三方library支援(或是自己寫)。
Arduino的硬體PWM極限(Arduino Mega 2560) 以Arduino Mega 2560為例，在其datasheet(link)中提到其&amp;quot;Six/Twelve PWM Channels with Programmable Resolution from 2 to 16 Bits&amp;rdquo;，ATmega2560有12個PWM channel，resolution可為2~16bits。所以其實Arduino Mega 2560硬體可以比Arduino Framework設計的resolution高很多。至於為什麼Arduino官方不用16bits呢，我猜是因為為了保證0~255的限制是可以達成。Arduino Framework的PWM frequency是固定的(16 MHz / 64 / 255 / 2 = 490.196Hz，見Secrets Of Arduino PWM)。
而PWM resolution並不是你想要16bits就可以有16bits的resolution，PWM resolution跟PWM frequency息息相關。在ATmega2560中，Frequecy與系統頻率、timer prescaler(除頻器)，還有最常使用的TOP值(限定Timer counter的最大上限)有關。TOP值的大小即為PWM resolution。依據Atmel PWM resolution公式：
 PWM resolution = log(TOP + 1) / log 2
  通常要把PWM resolution拉到最高，PWM frequency會很小，這主要看設計時的選擇。其他細部詳情請見ATmega640/V-1280/V-1281/V-2560/V-2561/V [DATASHEET]第17章。</description>
    </item>
    
    <item>
      <title>Maker常用開發板</title>
      <link>https://daichou.github.io/posts/maker/</link>
      <pubDate>Sun, 01 May 2016 08:00:00 -0700</pubDate>
      
      <guid>https://daichou.github.io/posts/maker/</guid>
      <description>對於Maker來說，選擇適合的開發板可以加速make的時間。本文會依照難度特色來做分類。
入門款
** Ardunio系列：**
 基本款(Entry level):Ardunio UNO,Ardunio 101,Ardunio PRO  &amp;gt;&amp;raquo; 特色：pin腳少(少於20隻)，PWM port少(不多於6隻)，Analog輸入腳位少(少於6)。
&amp;gt;&amp;raquo; 適合入門玩家學習操作I/O(DigitalWrtie),PWM(AnalogWrite),ADC(analogRead)。適合小專案與空間較小之專案。
 進階板(Enhanced feature):Ardunio MEGA,Ardunio ZERO,Ardunio DUE  &amp;gt;&amp;raquo; Ardunio MEGA腳位很多，PWM腳多達15隻，對於需要大量馬達或servo的專案來說十分適合，而且其UART多達四組，還有一組SPI和一組I2C可方便擴充。
&amp;gt;&amp;raquo; Ardunio ZERO是小型低電壓板Ardunio。
&amp;gt;&amp;raquo; Ardunio DUE 是ARM-based的Ardunio，腳位很多，同時還有兩個DAC，和USB-OTG，為MEGA板所沒有的。
 IOT板：Ardunio YUN  &amp;gt;&amp;raquo;Ardunio YUN是一塊同時擁有MCU(Ardunio)和SOC(OS為linux)的開發板，基本連網功能透過linux部份，其餘操作在Ardunio部份上，可支援wifi(IEEE 802.11b/g/n)和ethernet(IEEE 802.11b/g/n)，想當然爾，當然是一塊面向物連網的開發板。
 其他module  很多，去找吧，我把他們全都放在那了。對於入門者來說，最重要的是有library和API支援，不然自己看datasheet來刻是很困難的。
 其他類Ardunio開發板  這裏指得是支援Ardunio語法(library)的開發板，常見的如Picdunio,linkit Smart 7688和linkit 7688 DUO系列等。
進階款
** Raspberry Pi**
 Pi 1,Pi 2 Pi3 , Pi zero:  基本上都是使用Broadcom的單板電腦，都是ARM以處理器為核心，當然ARM系列的優點都有(如省電)，支援USB、ethernet、RCA、I2S、SD卡、相機模組。
作業系統有Raspbian(Debian系，論壇資源最多，問題易找到解答)、Arch Linux Arm(Arch linux十分輕量，而且十分先進，其套件管理佳，但難度叫高)、OpenELEC、Pidora(Fedora)等。</description>
    </item>
    
  </channel>
</rss>