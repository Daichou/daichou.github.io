<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Note on Daichou&#39;s blog</title>
    <link>https://daichou.github.io/tags/note/</link>
    <description>Recent content in Note on Daichou&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Wed, 19 Aug 2020 19:59:18 +0800</lastBuildDate><atom:link href="https://daichou.github.io/tags/note/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在Ubuntu 18.04 上執行riscv-torture (run riscv-torture on Ubuntu 18.04)</title>
      <link>https://daichou.github.io/2020/08/%E5%9C%A8ubuntu-18.04-%E4%B8%8A%E5%9F%B7%E8%A1%8Criscv-torture-run-riscv-torture-on-ubuntu-18.04/</link>
      <pubDate>Wed, 19 Aug 2020 19:59:18 +0800</pubDate>
      
      <guid>https://daichou.github.io/2020/08/%E5%9C%A8ubuntu-18.04-%E4%B8%8A%E5%9F%B7%E8%A1%8Criscv-torture-run-riscv-torture-on-ubuntu-18.04/</guid>
      <description>riscv-torture介紹 基本上就是一個個產生類隨機組合語言的RISCV測試工具。主要流程為產生random test 組合語言程式，接下來透過riscv-isa-sim先執行過取得signature(general purpose register的結果)，然後與待測核心(DUT)的general purpose register執行結果做比較來驗證核心的正確性。</description>
    </item>
    
    <item>
      <title>Vivado 中 Verilog與VHDL模組相連</title>
      <link>https://daichou.github.io/2020/08/vivado-%E4%B8%AD-verilog%E8%88%87vhdl%E6%A8%A1%E7%B5%84%E7%9B%B8%E9%80%A3/</link>
      <pubDate>Wed, 12 Aug 2020 19:39:23 +0800</pubDate>
      
      <guid>https://daichou.github.io/2020/08/vivado-%E4%B8%AD-verilog%E8%88%87vhdl%E6%A8%A1%E7%B5%84%E7%9B%B8%E9%80%A3/</guid>
      <description>當要在Verilog中instantiate一個VHDL模組時，需要考慮Mixed Language Boundary以及Mapping Rules，簡單來說就是兩者間的介面，以及port之間的對接。</description>
    </item>
    
    <item>
      <title>RISCV Open Source Verification and Simulation Strategy</title>
      <link>https://daichou.github.io/2020/06/riscv-open-source-verification-and-simulation-strategy/</link>
      <pubDate>Mon, 01 Jun 2020 20:58:24 +0800</pubDate>
      
      <guid>https://daichou.github.io/2020/06/riscv-open-source-verification-and-simulation-strategy/</guid>
      <description>RISCV Core模擬驗證策略開源方案 RISC-V Core verification and simulation with OpenSource solution 最近看了比較多core，而自己也有為了測試跑了很多core的模擬，之前也因為實驗室需求搞了一些簡易的純模擬測試平台。所以把一些心得整理一下。</description>
    </item>
    
    <item>
      <title>Arduino: High resolution PWM (more than 8bits),Arduino提高PWM resolution</title>
      <link>https://daichou.github.io/2018/07/arduino-high-resolution-pwm-more-than-8bitsarduino%E6%8F%90%E9%AB%98pwm-resolution/</link>
      <pubDate>Sun, 22 Jul 2018 01:34:00 -0700</pubDate>
      
      <guid>https://daichou.github.io/2018/07/arduino-high-resolution-pwm-more-than-8bitsarduino%E6%8F%90%E9%AB%98pwm-resolution/</guid>
      <description>Arduino PWM(analogWrite) Arduino PWM是使用analogWrite，但是其有一個限制，也就是PWM resolution只有256，PWM duty cycle的值只能介於0~255，對於一般的應用來說，這個值還可以應付，但是對於高精度的Servo或是馬達，這個值實在是太小了。(請參考analogWrite)。雖然在有些板子Arduino提供analogWriteResolution這個函式(Zero, Due &amp;amp; MKR Family、參閱：analogWriteResolution)可以將PWM resolution提高至12，更高的值內部會做mapping到比較低解析度。至於其他板子(例如:Arduino Mega 2560)，則需要第三方library支援(或是自己寫)。</description>
    </item>
    
    <item>
      <title>對MPLAB X IDE產生之專案導入git</title>
      <link>https://daichou.github.io/2018/07/%E5%B0%8Dmplab-x-ide%E7%94%A2%E7%94%9F%E4%B9%8B%E5%B0%88%E6%A1%88%E5%B0%8E%E5%85%A5git/</link>
      <pubDate>Wed, 18 Jul 2018 07:25:00 -0700</pubDate>
      
      <guid>https://daichou.github.io/2018/07/%E5%B0%8Dmplab-x-ide%E7%94%A2%E7%94%9F%E4%B9%8B%E5%B0%88%E6%A1%88%E5%B0%8E%E5%85%A5git/</guid>
      <description>MPLAB X IDE產生之專案架構 MPLAB X IDE產生之專案會XXX.</description>
    </item>
    
    <item>
      <title>對MPLAB X IDE產生之專案導入git</title>
      <link>https://daichou.github.io/tech/mplab-x-idegit/</link>
      <pubDate>Wed, 18 Jul 2018 07:25:00 -0700</pubDate>
      
      <guid>https://daichou.github.io/tech/mplab-x-idegit/</guid>
      <description>MPLAB X IDE產生之專案架構 MPLAB X IDE產生之專案會XXX.</description>
    </item>
    
    <item>
      <title>CMake: find_package and custom find cmake (findXXX.cmake)</title>
      <link>https://daichou.github.io/2018/07/cmake-find_package-and-custom-find-cmake-findxxx.cmake/</link>
      <pubDate>Sat, 14 Jul 2018 02:06:00 -0700</pubDate>
      
      <guid>https://daichou.github.io/2018/07/cmake-find_package-and-custom-find-cmake-findxxx.cmake/</guid>
      <description>CMake: find_package and custom find cmake (findXXX.</description>
    </item>
    
    <item>
      <title>CMake Tricks: 一些小技巧</title>
      <link>https://daichou.github.io/2018/07/cmake-tricks-%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Fri, 13 Jul 2018 23:19:00 -0700</pubDate>
      
      <guid>https://daichou.github.io/2018/07/cmake-tricks-%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid>
      <description>CMake Tricks: 一些小技巧 有常在編一些opensource的專案的應該都對CMake不陌生。這篇文章就整理些我在編使用CMake的專案時遇到的一些問題與解法。</description>
    </item>
    
    <item>
      <title>Blogger Syntax highlight over https</title>
      <link>https://daichou.github.io/2018/07/blogger-syntax-highlight-over-https/</link>
      <pubDate>Fri, 13 Jul 2018 20:56:00 -0700</pubDate>
      
      <guid>https://daichou.github.io/2018/07/blogger-syntax-highlight-over-https/</guid>
      <description>Blogger Syntax highlight over https 由於現在blogger要求https，以往的常用的scripts：</description>
    </item>
    
    <item>
      <title>使用LXC建立USB以及X-forward環境(deprecated)</title>
      <link>https://daichou.github.io/2018/03/%E4%BD%BF%E7%94%A8lxc%E5%BB%BA%E7%AB%8Busb%E4%BB%A5%E5%8F%8Ax-forward%E7%92%B0%E5%A2%83deprecated/</link>
      <pubDate>Fri, 09 Mar 2018 18:51:00 -0800</pubDate>
      
      <guid>https://daichou.github.io/2018/03/%E4%BD%BF%E7%94%A8lxc%E5%BB%BA%E7%AB%8Busb%E4%BB%A5%E5%8F%8Ax-forward%E7%92%B0%E5%A2%83deprecated/</guid>
      <description>使用LXC建立USB以及X forward環境(deprecated) 因為修課需要一些debian系的工具，不過我不想讓debian系的和Arch Linux混在一起，所以LXC看起來是一個不錯的解。</description>
    </item>
    
    <item>
      <title>Arduino TLC5940與伺服馬達</title>
      <link>https://daichou.github.io/2017/09/arduino-tlc5940%E8%88%87%E4%BC%BA%E6%9C%8D%E9%A6%AC%E9%81%94/</link>
      <pubDate>Fri, 08 Sep 2017 22:39:00 -0700</pubDate>
      
      <guid>https://daichou.github.io/2017/09/arduino-tlc5940%E8%88%87%E4%BC%BA%E6%9C%8D%E9%A6%AC%E9%81%94/</guid>
      <description>Arduino TLC5940與伺服馬達 TLC5940介紹 TLC5940是TI的16 channel LED驅動晶片。可以支援同時16通道的PWM灰階輸出，解析度為4096階。同時有兩種模式 12 bit (4096 Steps) Grayscale PWM Control 和 Dot Correction。</description>
    </item>
    
    <item>
      <title>MPU6050 Gyroscope/Accelerometer 使用筆記</title>
      <link>https://daichou.github.io/2017/04/mpu6050-gyroscope/accelerometer-%E4%BD%BF%E7%94%A8%E7%AD%86%E8%A8%98/</link>
      <pubDate>Thu, 27 Apr 2017 04:38:00 -0700</pubDate>
      
      <guid>https://daichou.github.io/2017/04/mpu6050-gyroscope/accelerometer-%E4%BD%BF%E7%94%A8%E7%AD%86%E8%A8%98/</guid>
      <description>MPU6050 Gyroscope/Accelerometer 使用筆記 特性與參數  用途：量測姿態 精度：  Gyro : 250/500/1000/2000 dps (degree per second) Accel : +-2/4/6/16 g   輸出資料：為angular rate(角速度) ，16bit , LSB/g 原始感應器電壓VDD(僅有晶片)：2.</description>
    </item>
    
    <item>
      <title>[Note] GDB 一些指令功能速查</title>
      <link>https://daichou.github.io/2017/03/note-gdb-%E4%B8%80%E4%BA%9B%E6%8C%87%E4%BB%A4%E5%8A%9F%E8%83%BD%E9%80%9F%E6%9F%A5/</link>
      <pubDate>Fri, 03 Mar 2017 21:09:00 -0800</pubDate>
      
      <guid>https://daichou.github.io/2017/03/note-gdb-%E4%B8%80%E4%BA%9B%E6%8C%87%E4%BB%A4%E5%8A%9F%E8%83%BD%E9%80%9F%E6%9F%A5/</guid>
      <description>[Note] GDB 一些指令功能速查 前情提要 這篇主要是介紹gdb的一些常用功能，遇到的時候方便google。</description>
    </item>
    
    <item>
      <title>L3G4200 gyroscope使用筆記</title>
      <link>https://daichou.github.io/2017/02/l3g4200-gyroscope%E4%BD%BF%E7%94%A8%E7%AD%86%E8%A8%98/</link>
      <pubDate>Sat, 18 Feb 2017 17:50:00 -0800</pubDate>
      
      <guid>https://daichou.github.io/2017/02/l3g4200-gyroscope%E4%BD%BF%E7%94%A8%E7%AD%86%E8%A8%98/</guid>
      <description>L3G4200 gyroscope使用筆記 特性與參數  用途：量測姿態 精度：250/500/2000 dps (degree per second) 輸出資料：為angular rate(角速度) ，16bit 原始感應器電壓(僅有晶片)：2.</description>
    </item>
    
    <item>
      <title>Valgrind:C/C&#43;&#43;分析工具</title>
      <link>https://daichou.github.io/2017/01/valgrindc/c-%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Fri, 13 Jan 2017 22:05:00 -0800</pubDate>
      
      <guid>https://daichou.github.io/2017/01/valgrindc/c-%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/</guid>
      <description>Valgrind:C/C++分析工具 Valgrind是開源的測試框架，可以用來動態分析記憶體配置、快取使用、多執行序bug。
安裝 $ sudo pacman -Sy valgrind 基本用法 $ valgrind 程式名稱 args 預設會是用memcheck工具分析，在這個工具下她會匯出heap使用、memory leak、還有記憶體使用錯誤的部份backtrace。 進階用法 $ valgrind --tool=toolname 程式名稱 args 這是valgrind最有方便的地方，valgrind旗下有九個使用者端的工具，和幾個開發者工具。 1.</description>
    </item>
    
    <item>
      <title>[Note]Microcontroller的排程方式</title>
      <link>https://daichou.github.io/2016/12/notemicrocontroller%E7%9A%84%E6%8E%92%E7%A8%8B%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Wed, 07 Dec 2016 03:06:00 -0800</pubDate>
      
      <guid>https://daichou.github.io/2016/12/notemicrocontroller%E7%9A%84%E6%8E%92%E7%A8%8B%E6%96%B9%E5%BC%8F/</guid>
      <description>[Note]Microcontroller的排程方式 這篇為我看完Microchip Technology 20024 FRM4 - Interrupt and Task Scheduling - No RTOS Required後所作的筆記。</description>
    </item>
    
    <item>
      <title>C99 fast data type</title>
      <link>https://daichou.github.io/2016/12/c99-fast-data-type/</link>
      <pubDate>Tue, 06 Dec 2016 20:05:00 -0800</pubDate>
      
      <guid>https://daichou.github.io/2016/12/c99-fast-data-type/</guid>
      <description>C99 fast data type 這個主題是我在看完Efficient C Tip #13 – use the modulus (%) operator with caution這篇文章發現的C99在stdint.</description>
    </item>
    
    <item>
      <title>『note』目前的vim</title>
      <link>https://daichou.github.io/2016/09/note%E7%9B%AE%E5%89%8D%E7%9A%84vim/</link>
      <pubDate>Wed, 28 Sep 2016 23:16:00 -0700</pubDate>
      
      <guid>https://daichou.github.io/2016/09/note%E7%9B%AE%E5%89%8D%E7%9A%84vim/</guid>
      <description>『note』目前的vim 本文僅僅紀錄我用了什麼vim plugin。</description>
    </item>
    
  </channel>
</rss>
